@startuml

autonumber 3.3.2.1
-> "service:US008CreateTransactionService" : addPersonalTransaction(createPersonalTransactionDTO)
activate "service:US008CreateTransactionService"  #FFBBBB

|||

ref over "service:US008CreateTransactionService" : getAttributes (personEmail, amount, currency, description, date, type, \ncategoryID, accountFromID, accountToID, personID, ledger)

|||

"service:US008CreateTransactionService" -> "ledgerRepo:LedgerRepository" : addTransactionToLedger (ledgerID, amount, description, \n date, category, accountFrom, accountTo, type)
activate "ledgerRepo:LedgerRepository" #FFBBBB

"service:US008CreateTransactionService" -> "ledgerRepo:LedgerRepository": isIDOnRepository(owner)

"ledgerRepo:LedgerRepository"->":LedgerDomainDataAssembler": toData(ledger)
activate ":LedgerDomainDataAssembler" #FFBBBB

autonumber 3.3.2.6.2.1
":LedgerDomainDataAssembler"->"ledger:Ledger" : owner = ledger.getID().getOwnerID().toString()
activate "ledger:Ledger" #FFBBBB
deactivate "ledger:Ledger"

autonumber 3.3.2.6.2.1
":LedgerDomainDataAssembler"->"ledger:Ledger" : creationDate = ledger.getCreationDateToString()
activate "ledger:Ledger" #FFBBBB
deactivate "ledger:Ledger"

create "ledgerJpa:LedgerJpa"
":LedgerDomainDataAssembler"->"ledgerJpa:LedgerJpa" : create(owner, creationDate)
":LedgerDomainDataAssembler"-->"ledgerRepo:LedgerRepository" : ledgerJpa
deactivate ":LedgerDomainDataAssembler"

create "transaction:Transaction"
"ledgerRepo:LedgerRepository"->"transaction:Transaction": new Transaction (amount, description, \nlocalDate, category, accountFrom, accountTo, type)

"ledgerRepo:LedgerRepository"->"transactionRepo:transactionJpaRepository": toData(ledger, transaction)
activate "transactionRepo:transactionJpaRepository" #FFBBBB

"transactionRepo:transactionJpaRepository"->":TransactionDomainDataAssembler": toData(ledger, transaction)
activate ":TransactionDomainDataAssembler" #FFBBBB

create ":TransactionJpa"
":TransactionDomainDataAssembler"->":TransactionJpa" : create(ledgerJpa, amount, currency, description,\n date, category, accountFrom, accountTo, type)
":TransactionDomainDataAssembler"-->"transactionRepo:transactionJpaRepository" : transactionJpa
deactivate ":TransactionDomainDataAssembler"

"transactionRepo:transactionJpaRepository"->"transactionRepo:transactionJpaRepository": newTransactionJpa = save(transactionJpa)

"transactionRepo:transactionJpaRepository"-->"ledgerRepo:LedgerRepository": newTransactionJpa
deactivate "transactionRepo:transactionJpaRepository"

"ledgerRepo:LedgerRepository"->"ledgerJpa:LedgerJpa" : addTransaction(owner, newTransactionJpa)
activate "ledgerJpa:LedgerJpa" #FFBBBB

"ledgerJpa:LedgerJpa"->"ledgerJpa:LedgerJpa" : addTransaction(newTransactionJpa)
deactivate "ledgerJpa:LedgerJpa" #FFBBBB

"ledgerRepo:LedgerRepository"->":TransactionDomainDataAssembler":toDomain(newTransactionJpa)
activate ":TransactionDomainDataAssembler" #FFBBBB


'FALTA- Checking if owner is a Group or Person:



":TransactionDomainDataAssembler" -> ":TransactionJpa" :
ref over ":TransactionJpa" : getTransactionJpaAttributes
":TransactionJpa" --> ":TransactionDomainDataAssembler" : amount, currency, description, \ndate, type, id, category, accountFrom, accountTo
deactivate ":TransactionJpa"


create "newTransaction:Transaction"
":TransactionDomainDataAssembler"->"newTransaction:Transaction" : create(amount, description, date , category\n, accountFrom, accountTo, type, id)
":TransactionDomainDataAssembler" --> "ledgerRepo:LedgerRepository" : newTransaction
deactivate ":TransactionDomainDataAssembler"


"ledgerRepo:LedgerRepository" --> "service:US008CreateTransactionService" : newTransaction
deactivate "ledgerRepo:LedgerRepository"

"service:US008CreateTransactionService"->":LedgerDTOAssembler":createTransactionShortDTOFromDomain(newTransaction)
activate ":LedgerDTOAssembler" #FFBBBB

":LedgerDTOAssembler"->"newTransaction:Transaction":
activate "newTransaction:Transaction" #FFBBBB

ref over "newTransaction:Transaction" : getAttributes
"newTransaction:Transaction"-->":LedgerDTOAssembler": amount, currency, \naccountFrom, accountTo, type, id
deactivate "newTransaction:Transaction" #FFBBBB

create "transactionShortDTO:TransactionShortDTO"
":LedgerDTOAssembler"->"transactionShortDTO:TransactionShortDTO": create (amount, currency, \naccountFrom, accountTo, type, id)

":LedgerDTOAssembler" --> "service:US008CreateTransactionService" : transactionShortDTO
deactivate ":LedgerDTOAssembler"

<-- "service:US008CreateTransactionService" : transactionShortDTO
deactivate "service:US008CreateTransactionService"

@enduml