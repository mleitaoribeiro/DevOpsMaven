@startuml
skinparam DefaultFontSize 25

title US006 Sequence Diagram - Happy Case  #6495ED

participant "HTTP Client (Test)"
participant "inputDTO:\ncreatePersonAccountInfoDTO"
participant "mvcResult :MvcResult"
participant "mvc:MockMvc"
participant "restController:US006CreatePersonAccountControllerRest"
participant "accountDTO:AccountDTO"
participant ":AccountDTOAssembler"
participant "service:US006CreatePersonAccountService"
participant "infoDTO:CreatePersonAccountInfoDTO"

== Arrange ==
autonumber

create "inputDTO:\ncreatePersonAccountInfoDTO"
"HTTP Client (Test)" -> "inputDTO:\ncreatePersonAccountInfoDTO": inputDTO = new CreatePersonAccountInfoDTO\n(accountDenomination, accountDescription);
activate "HTTP Client (Test)" #FFBBBB
"HTTP Client (Test)" -> "HTTP Client (Test)": inputJson = mapToJson(inputDTO)

== Act ==

create "mvc:MockMvc"
"HTTP Client (Test)" -> "mvc:MockMvc" :POST /person/{personEmail}/accounts {inputJson}
activate "mvc:MockMvc"  #FFBBBB

autonumber 3.1
"mvc:MockMvc" -> "mvc:MockMvc" :  deserialize inputJson

create "infoDTO:CreatePersonAccountInfoDTO"
"mvc:MockMvc"-->"infoDTO:CreatePersonAccountInfoDTO": create

"mvc:MockMvc"-> "restController:US006CreatePersonAccountControllerRest": createPersonAccount(personEmail, infoDTO)
activate "restController:US006CreatePersonAccountControllerRest" #FFBBBB

autonumber 3.3.1
"restController:US006CreatePersonAccountControllerRest"-> ":AccountDTOAssembler": transformIntoCreate\nPersonAccountDTO(personEmail, infoDTO)
activate ":AccountDTOAssembler"  #FFBBBB

autonumber 3.3.1.1
":AccountDTOAssembler" -> "infoDTO:CreatePersonAccountInfoDTO" : accountDescription = getAccountDescription();
activate "infoDTO:CreatePersonAccountInfoDTO"  #FFBBBB
deactivate "infoDTO:CreatePersonAccountInfoDTO"

":AccountDTOAssembler" -> "infoDTO:CreatePersonAccountInfoDTO" : accountDescription = getAccountDenomination();
activate "infoDTO:CreatePersonAccountInfoDTO"  #FFBBBB
deactivate "infoDTO:CreatePersonAccountInfoDTO"

create "createPersonAccountDTO:CreatePersonAccountDTO"
":AccountDTOAssembler" -> "createPersonAccountDTO:CreatePersonAccountDTO": new CreatePersonAccountDTO\n(personEmail, accountDenomination, accountDescription)

":AccountDTOAssembler" -> "restController:US006CreatePersonAccountControllerRest" : createPersonAccountDTO

deactivate ":AccountDTOAssembler"

autonumber 3.3.2
"restController:US006CreatePersonAccountControllerRest"->"service:US006CreatePersonAccountService": createPersonAccount(createPersonAccountDTO)
activate "service:US006CreatePersonAccountService" #FFBBBB

ref over "service:US006CreatePersonAccountService" : US006CreatePersonAccountControllerRestRef

"service:US006CreatePersonAccountService" --> "restController:US006CreatePersonAccountControllerRest" : accountDTO
deactivate "service:US006CreatePersonAccountService"

autonumber 3.3.3
"restController:US006CreatePersonAccountControllerRest"->"restController:US006CreatePersonAccountControllerRest": selfLink = /persons/{ownerID}/accounts/{accountDenomination}
"restController:US006CreatePersonAccountControllerRest"-> "accountDTO:AccountDTO": add(selfLink)
activate "accountDTO:AccountDTO" #FFBBBB
deactivate "accountDTO:AccountDTO" #FFBBBB
"restController:US006CreatePersonAccountControllerRest"->"restController:US006CreatePersonAccountControllerRest": accountsLink = /persons/{ownerID}/accounts
"restController:US006CreatePersonAccountControllerRest"-> "accountDTO:AccountDTO": add(accountsLink)
activate "accountDTO:AccountDTO" #FFBBBB
deactivate "accountDTO:AccountDTO" #FFBBBB

"restController:US006CreatePersonAccountControllerRest" -> "mvc:MockMvc": responseEntity = Response Entity<>\n(accountDTO,HttpStatus.CREATED)
deactivate "restController:US006CreatePersonAccountControllerRest"

autonumber 3.4
"mvc:MockMvc" -> "mvc:MockMvc" : serialize responseEntity
"mvc:MockMvc" --> "HTTP Client (Test)" : {jsonResponse}
deactivate "mvc:MockMvc"

autonumber 4
create "mvcResult :MvcResult"
"HTTP Client (Test)" -> "mvcResult :MvcResult" : create
activate "mvcResult :MvcResult" #FFBBBB

"HTTP Client (Test)" -> "mvcResult :MvcResult" : status = getStatus()
"HTTP Client (Test)" -> "mvcResult :MvcResult" : result = getContentAsString()
deactivate "mvcResult :MvcResult" #FFBBBB

== Assert ==

"HTTP Client (Test)" -> "HTTP Client (Test)" : assertEquals(201, status)
"HTTP Client (Test)" -> "HTTP Client (Test)" : assertEquals(expected, result)
deactivate "HTTP Client (Test)" #FFBBBB

@enduml