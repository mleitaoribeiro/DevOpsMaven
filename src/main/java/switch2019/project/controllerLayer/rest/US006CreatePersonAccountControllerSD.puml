@startuml
skinparam DefaultFontSize 25

title US006 Sequence Diagram - Happy Case  #6495ED

participant "HTTP Client (Test)"
participant "resultAction:ResultAction"
participant "inputDTO:\ncreatePersonAccountInfoDTO"
participant "postRequest:\nRequestBuilder"
participant "mvcResult :MvcResult"
participant "mvc:MockMvc"
participant "restController:US006CreatePersonAccountControllerRest"
participant ":AccountDTOAssembler"
participant "service:US006CreatePersonAccountService"
participant "infoDTO:CreatePersonAccountInfoDTO"

== Arrange ==
autonumber

create "inputDTO:\ncreatePersonAccountInfoDTO"
activate "HTTP Client (Test)" #FFBBBB
"HTTP Client (Test)" -> "inputDTO:\ncreatePersonAccountInfoDTO": inputDTO = new CreatePersonAccountInfoDTO\n(personEmail, accountDenomination, accountDescription);
"HTTP Client (Test)" -> "HTTP Client (Test)": inputJson = mapToJson(inputDTO)

== Act ==

create "postRequest:\nRequestBuilder"
"HTTP Client (Test)" -> "postRequest:\nRequestBuilder" : postRequest = POST=/createPersonAccount {inputJson}

create "mvc:MockMvc"
"HTTP Client (Test)" -> "mvc:MockMvc" : perform(postRequest)
activate "mvc:MockMvc"  #FFBBBB

autonumber 4.1
"mvc:MockMvc" -> "mvc:MockMvc" :  deserialize inputJson

create "infoDTO:CreatePersonAccountInfoDTO"
"mvc:MockMvc"->"infoDTO:CreatePersonAccountInfoDTO": create

create "restController:US006CreatePersonAccountControllerRest"
"mvc:MockMvc"-> "restController:US006CreatePersonAccountControllerRest": createPersonAccount(infoDTO)
activate "restController:US006CreatePersonAccountControllerRest" #FFBBBB

autonumber 4.3.1
"restController:US006CreatePersonAccountControllerRest"-> ":AccountDTOAssembler": createPersonAccountDTO =\ntransformIntoCreatePersonAccountDTO(infoDTO)
activate ":AccountDTOAssembler"  #FFBBBB

autonumber 4.3.1.1
":AccountDTOAssembler" -> "infoDTO:CreatePersonAccountInfoDTO" : personEmail = getPersonEmail();
activate "infoDTO:CreatePersonAccountInfoDTO"  #FFBBBB
deactivate "infoDTO:CreatePersonAccountInfoDTO"

":AccountDTOAssembler" -> "infoDTO:CreatePersonAccountInfoDTO" : accountDescription = getAccountDescription();
activate "infoDTO:CreatePersonAccountInfoDTO"  #FFBBBB
deactivate "infoDTO:CreatePersonAccountInfoDTO"

":AccountDTOAssembler" -> "infoDTO:CreatePersonAccountInfoDTO" : accountDescription = getAccountDenomination();
activate "infoDTO:CreatePersonAccountInfoDTO"  #FFBBBB
deactivate "infoDTO:CreatePersonAccountInfoDTO"

create "createPersonAccountDTO:CreatePersonAccountDTO"
":AccountDTOAssembler" -> "createPersonAccountDTO:CreatePersonAccountDTO": new CreatePersonAccountDTO\n(personEmail, accountDenomination, accountDescription)
deactivate ":AccountDTOAssembler"

autonumber 4.3.2
"restController:US006CreatePersonAccountControllerRest"->"service:US006CreatePersonAccountService": accountDTO = createPersonAccount(createPersonAccountDTO)
activate "service:US006CreatePersonAccountService" #FFBBBB

autonumber 4.3.2.1
"service:US006CreatePersonAccountService" -> "createPersonAccountDTO:CreatePersonAccountDTO" : personEmail = getPersonEmail()
activate "createPersonAccountDTO:CreatePersonAccountDTO"  #FFBBBB
deactivate "createPersonAccountDTO:CreatePersonAccountDTO"

"service:US006CreatePersonAccountService" -> "createPersonAccountDTO:CreatePersonAccountDTO" : accountDenomination= getAccountDenomination()
activate "createPersonAccountDTO:CreatePersonAccountDTO"  #FFBBBB
deactivate "createPersonAccountDTO:CreatePersonAccountDTO"

"service:US006CreatePersonAccountService" -> "createPersonAccountDTO:CreatePersonAccountDTO" : accountDescription = getAccountDescription()
activate "createPersonAccountDTO:CreatePersonAccountDTO"  #FFBBBB
deactivate "createPersonAccountDTO:CreatePersonAccountDTO"

"service:US006CreatePersonAccountService" -> "personRepo:PersonRepository" : personID = findPersonByEmail(personEmail)
activate "personRepo:PersonRepository" #FFBBBB
deactivate "personRepo:PersonRepository"

"service:US006CreatePersonAccountService" -> "accountRepo:AccountRepository" : createAccount(accountDenomination, accountDescription, personID)
activate "accountRepo:AccountRepository" #FFBBBB

autonumber 4.3.2.5.1
"accountRepo:AccountRepository" -> "accountRepo:AccountRepository" : add(account)

"accountRepo:AccountRepository" --> "service:US006CreatePersonAccountService" : account
deactivate "accountRepo:AccountRepository" #FFBBBB

activate  ":AccountDTOAssembler" #FFBBBB
"service:US006CreatePersonAccountService" -> ":AccountDTOAssembler": createAccountDTOFromDomainObject(account)

":AccountDTOAssembler" --> "service:US006CreatePersonAccountService" : accountDTO
deactivate ":AccountDTOAssembler"

"service:US006CreatePersonAccountService" --> "restController:US006CreatePersonAccountControllerRest" : accountDTO
deactivate "service:US006CreatePersonAccountService"

"restController:US006CreatePersonAccountControllerRest" -> "mvc:MockMvc": responseEntity = responseEntity<>\n(accountDTO,HttpStatus.CREATED)
deactivate "restController:US006CreatePersonAccountControllerRest"

autonumber 4.4
"mvc:MockMvc" -> "mvc:MockMvc" : serialize responseEntity
create "resultAction:ResultAction"
"resultAction:ResultAction" <-- "mvc:MockMvc" : create
activate "resultAction:ResultAction" #FFBBBB
deactivate "mvc:MockMvc"

autonumber 5
"HTTP Client (Test)" -> "resultAction:ResultAction" : mvcResult = andReturn()

create "mvcResult :MvcResult"
autonumber 5.1
"resultAction:ResultAction" -> "mvcResult :MvcResult" : create
deactivate "resultAction:ResultAction"

autonumber 6
"HTTP Client (Test)" -> "mvcResult :MvcResult" : response = getResponse
activate "mvcResult :MvcResult" #FFBBBB
deactivate "mvcResult :MvcResult"

"HTTP Client (Test)" -> "mvcResult :MvcResult" : status = getStatus()
activate "mvcResult :MvcResult" #FFBBBB
deactivate "mvcResult :MvcResult"

"HTTP Client (Test)" -> "mvcResult :MvcResult" : result = getContentAsString()
activate "mvcResult :MvcResult" #FFBBBB
deactivate "mvcResult :MvcResult"

== Assert ==

"HTTP Client (Test)" -> "HTTP Client (Test)" : assertEquals(201, status)
"HTTP Client (Test)" -> "HTTP Client (Test)" : assertEquals(expectedResult, result)

@enduml