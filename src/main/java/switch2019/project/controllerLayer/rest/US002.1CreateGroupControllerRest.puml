@startuml

skinparam DefaultFontSize 20

title <b>US002.1 Sequence Diagram - Happy Case</b>

participant "HTTP Client (Test)"
participant "response :MockHttpServletResponse"
participant "mvcResult :MvcResult"
participant "inputDTO:CreateGroupInfoDTO"
participant "resultAction: ResultActions"
participant "mvc:MockMvc"
participant "info:createGroupInfoDTO"
participant "restController:US2.1CreateGroupControllerRest"
participant "service:US2.1CreateGroupService"
participant "groupDTO:GroupDTO"
participant ":GroupDTOAssembler"

== Arrange ==

autonumber
create "inputDTO:CreateGroupInfoDTO"
"HTTP Client (Test)" --> "inputDTO:CreateGroupInfoDTO": create ()
activate "HTTP Client (Test)" #FFBBBB

autonumber 1.1
"HTTP Client (Test)" -> "inputDTO:CreateGroupInfoDTO": setGroupDescription(groupDescription)
activate "inputDTO:CreateGroupInfoDTO" #FFBBBB
deactivate "inputDTO:CreateGroupInfoDTO"

"HTTP Client (Test)" -> "inputDTO:CreateGroupInfoDTO": setPersonEmail(personEmail)
activate "inputDTO:CreateGroupInfoDTO" #FFBBBB
deactivate "inputDTO:CreateGroupInfoDTO"

autonumber 2
"HTTP Client (Test)" -> "HTTP Client (Test)": inputJson = mapToJson(inputDTO)

== Act ==

"HTTP Client (Test)" -> "mvc:MockMvc" :POST /groups {inputJson}
activate "mvc:MockMvc"  #FFBBBB


autonumber 4.1

activate "mvc:MockMvc" #FFBBBB
"mvc:MockMvc" -> "mvc:MockMvc" : deserialize inputJson

autonumber 4.2
create "info:createGroupInfoDTO"
"mvc:MockMvc" --> "info:createGroupInfoDTO" : create
deactivate "mvc:MockMvc"

autonumber 4.3
"mvc:MockMvc" -> "restController:US2.1CreateGroupControllerRest" : responseEntity = createGroup (createGroupInfoDTO)

autonumber 4.3.1
activate "restController:US2.1CreateGroupControllerRest" #FFBBBB
"restController:US2.1CreateGroupControllerRest" -> ":GroupDTOAssembler": createGroupDTO = transformOfCreationOfGroupDTO(createGroupInfoDTO)

autonumber 4.3.1.1

activate ":GroupDTOAssembler" #FFBBBB

":GroupDTOAssembler" -> "createGroupInfoDTO: CreateGroupInfoDTO": groupDescription = getGroupDescription()

activate "createGroupInfoDTO: CreateGroupInfoDTO" #FFBBBB
deactivate "createGroupInfoDTO: CreateGroupInfoDTO" #FFBBBB

":GroupDTOAssembler" -> "createGroupInfoDTO: CreateGroupInfoDTO": personEmail = getPersonEmail()
activate "createGroupInfoDTO: CreateGroupInfoDTO" #FFBBBB
deactivate "createGroupInfoDTO: CreateGroupInfoDTO" #FFBBBB

create "createGroupDTO:CreateGroupDTO"
":GroupDTOAssembler" --> "createGroupDTO:CreateGroupDTO": create(groupDescription,personEmail)
deactivate ":GroupDTOAssembler"

autonumber 4.3.2
"restController:US2.1CreateGroupControllerRest" -> "service:US2.1CreateGroupService" : createGroup(createGroupDTO)
|||
ref over "service:US2.1CreateGroupService": service:US2.1CreateGroup_Part2

activate "service:US2.1CreateGroupService" #FFBBBB

"service:US2.1CreateGroupService" --> "restController:US2.1CreateGroupControllerRest" : groupDTO
deactivate "service:US2.1CreateGroupService"

autonumber 4.3.3
"restController:US2.1CreateGroupControllerRest"->"restController:US2.1CreateGroupControllerRest": selfLink = /groups/{groupsDescription}

autonumber 4.3.4
"restController:US2.1CreateGroupControllerRest"-> "groupDTO:GroupDTO": add(selfLink)
activate "groupDTO:GroupDTO" #FFBBBB
deactivate "groupDTO:GroupDTO"

autonumber 4.3.5
"restController:US2.1CreateGroupControllerRest" --> "mvc:MockMvc" : return responseEntity = ResponseEntity<>\n (groupDTO, HttpStatus.CREATED)
deactivate "restController:US2.1CreateGroupControllerRest"

autonumber 4.4
"mvc:MockMvc" -> "mvc:MockMvc" : [serialize responseEntity]

autonumber 4.4.1
create "resultAction: ResultActions"

"mvc:MockMvc" -> "resultAction: ResultActions" : create ()
deactivate "mvc:MockMvc"

autonumber 5

"HTTP Client (Test)" -> "resultAction: ResultActions" : mvcResult = andReturn()
activate "resultAction: ResultActions" #FFBBBB

create "mvcResult :MvcResult"
autonumber 5.1
"resultAction: ResultActions" --> "mvcResult :MvcResult" : create()
deactivate "resultAction: ResultActions"

autonumber 6
"HTTP Client (Test)" -> "mvcResult :MvcResult" : response = getResponse()

autonumber 6.1

create "response :MockHttpServletResponse"
activate "mvcResult :MvcResult" #FFBBBB
"mvcResult :MvcResult" --> "response :MockHttpServletResponse" : create()
deactivate "mvcResult :MvcResult"

autonumber 7
"HTTP Client (Test)" -> "response :MockHttpServletResponse" : status = getStatus()
activate "response :MockHttpServletResponse" #FFBBBB
deactivate "response :MockHttpServletResponse"

"HTTP Client (Test)" -> "response :MockHttpServletResponse" : result = getContentAsString()
activate "response :MockHttpServletResponse" #FFBBBB
deactivate "response :MockHttpServletResponse"
== Assert ==

"HTTP Client (Test)" -> "HTTP Client (Test)" : assertEquals(201, status)
"HTTP Client (Test)" -> "HTTP Client (Test)" : assertEquals(expectedResult, result)
deactivate "HTTP Client (Test)"

@enduml

