@startuml
create ":Test"
==Arrange==
create "person:Person"
create "catList: CategoryList"
create "cat:Category"
create "acFrom:Account"
create "acTo:Account"
create "acList:AccountsList"

create "ledger:Ledger"
"person:Person" -> "ledger:Ledger" : create ()

create "amount:MonetaryValue"
":Test" -> "amount:MonetaryValue" : create (amount, currency)

create "type:Type"
":Test" -> "type:Type" : create (description)

== Act ==

":Test" -> "person:Person" : createTransaction (amount, description, \ncat, accountFrom, accountTo, type)
activate "person:Person"  #FFBBBB

"person:Person" -> "amount:MonetaryValue" : validateIfAmountIsPositive()

"person:Person" -> "catList: CategoryList" : validateIfCategoryIsInTheCategoryList(category)

"person:Person" -> "acList:AccountsList" : validateIfAccountIsInTheAccountsList(accountTo)

"person:Person" -> "ledger:Ledger" : addTransactionToLedger(amount, description, cat, acFrom, acTo, type)
activate "ledger:Ledger"  #FFBBBB

create "transaction:Transaction"
"ledger:Ledger" -> "transaction:Transaction" : create (amount, description, cat, acFrom, acTo, type)

"ledger:Ledger" -> "ledger:Ledger": add
deactivate "ledger:Ledger"  #FFBBBB
deactivate "person:Person"  #FFBBBB

== Assert ==

":Test" -> ":Test" : assertTrue(TransactionCreated)

@enduml