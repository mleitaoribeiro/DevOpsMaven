  @startuml
create ":Test"

== Arrange ==
create "US017:Controller"

create "person:Person"
":Test" -> "person:Person" : create()
activate "person:Person" #FFBBBB

create "ledger:Ledger"
"person:Person" -> "ledger:Ledger" : create()
activate "ledger:Ledger" #FFBBBB
":Test" -> "person:Person" : createTransaction(amount, description, date, category, accountFrom, accountTo, type)

"person:Person" -> "ledger:Ledger" : addTransactionToLedger()
create "transaction:Transaction"
"ledger:Ledger" -> "transaction:Transaction" : create()
deactivate "person:Person"
deactivate "ledger:Ledger"

== Act ==

":Test" -> "US017:Controller" : getPersonalBalanceFromPeriod(person, initialDate, finalDate)
activate "US017:Controller" #FFBBBB
"US017:Controller" -> "person:Person": getPersonalBalanceFromPeriod(initialDate, finalDate)
activate "person:Person" #FFBBBB
"person:Person" -> "ledger:Ledger": getBalanceFromPeriod(initialDate, finalDate)
activate "ledger:Ledger" #FFBBBB
"ledger:Ledger" -> "person:Person" : finalBalance
deactivate "ledger:Ledger"
"person:Person" -> "US017:Controller" : finalBalance
deactivate "person:Person"
"US017:Controller" -> ":Test" : finalBalance
deactivate "US017:Controller"

== Assert ==

":Test" -> ":Test" : assertEquals(expectedPersonalBalanceFromPeriod, personalBalanceFromPeriod

@enduml