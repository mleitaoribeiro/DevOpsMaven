@startuml

skinparam DefaultFontSize 20

create ":Test"

==Arrange==

create ":MemberGetsTheMovementsOfAnAccountInDateRangeController"
":Test" -> ":MemberGetsTheMovementsOfAnAccountInDateRangeController" : new

== Act ==

participant "group1:Group"
":Test" -> ":MemberGetsTheMovementsOfAnAccountInDateRangeController" : getOneAccountMovementsFromGroup\n(account, initialDate, finalDate, group1, person)
activate ":MemberGetsTheMovementsOfAnAccountInDateRangeController" #FFBBBB
":MemberGetsTheMovementsOfAnAccountInDateRangeController" -> "group1:Group" : getOneAccountMovementsFromGroup\n(account, initialDate, finalDate, person)
activate "group1:Group" #FFBBBB

"group1:Group" -> "group1:Group" : isGroupMember(person)

participant "ledger:Ledger"
"group1:Group" -> "ledger:Ledger" : getTransactionsInDateRange(initialDate, finalDate)
activate "ledger:Ledger" #FFBBBB
"ledger:Ledger" --> "group1:Group" : listOfTransactionsFromPeriod

"group1:Group" -> "ledger:Ledger" : getMovementsFromOneAccount (account, listOfTransactionsFromPeriod)
"ledger:Ledger" --> "group1:Group" : listOfTransactions
deactivate "ledger:Ledger" #FFBBBB
"group1:Group" --> ":MemberGetsTheMovementsOfAnAccountInDateRangeController" : listOfTransactions
deactivate "group1:Group" #FFBBBB
":MemberGetsTheMovementsOfAnAccountInDateRangeController" --> ":Test" : listOfTransactions
deactivate ":MemberGetsTheMovementsOfAnAccountInDateRangeController" #FFBBBB

== Assert ==

":Test" -> ":Test" : assertEquals(expectedTransactions, listOfTransactions)

@enduml