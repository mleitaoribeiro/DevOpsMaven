@startuml

skinparam DefaultFontSize 20

create ":Test"

note left of ":Test" #powderblue
	Arrange
end note
create "balanceController:MemberGetsBalanceInDateRangeController"
":Test" -> "balanceController:MemberGetsBalanceInDateRangeController" : new MemberGetsBalance\nInDateRangeController

participant "group1:Group"
participant "ledger:Ledger"
participant "transaction:Transaction"

ref over "group1:Group"
    US002 createGroup
end

ref over "group1:Group", "ledger:Ledger", "transaction:Transaction"
    US008.1 memberCreatesAGroupTransaction
end

note left of ":Test" #powderblue
	Act
end note

":Test" -> "balanceController:MemberGetsBalanceInDateRangeController" : groupBalance = getGroupBalanceInDateRange\n(initialDate, finalDate, group1, Person member)
activate "balanceController:MemberGetsBalanceInDateRangeController" #FFBBBB

"balanceController:MemberGetsBalanceInDateRangeController" -> "group1:Group": getGroupBalanceInDateRange\n(initialDate, finalDate)
activate "group1:Group" #FFBBBB

"group1:Group" -> "ledger:Ledger": getBalanceInDateRange\n(initialDate, finalDate)
activate "ledger:Ledger" #FFBBBB

deactivate "ledger:Ledger"
deactivate "group1:Group"
deactivate "balanceController:MemberGetsBalanceInDateRangeController"

note left of ":Test" #powderblue
	Assert
end note

":Test" -> ":Test" : assertEquals(expectedGroupBalance, groupBalance)

@enduml