@startuml

skinparam DefaultFontSize 20

create ":Test"

== Arrange ==

create "balanceController:MemberGetsBalanceInDateRangeController"
":Test" -> "balanceController:MemberGetsBalanceInDateRangeController" : new MemberGetsBalance\nInDateRangeController

participant "group1:Group"

create "ledger:Ledger"
":Test" -> "ledger:Ledger" : new Ledger()
activate "ledger:Ledger" #FFBBBB

create "transaction:Transaction"
"ledger:Ledger" -> "transaction:Transaction" : new Transaction(amount, description, \ncat, accountFrom, accountTo, type)
deactivate "ledger:Ledger" #FFBBBB

== Act  ==

":Test" -> "balanceController:MemberGetsBalanceInDateRangeController" : groupBalance = getGroupBalanceInDateRange\n(initialDate, finalDate, group1, Person member)
activate "balanceController:MemberGetsBalanceInDateRangeController" #FFBBBB

"balanceController:MemberGetsBalanceInDateRangeController" -> "group1:Group": getGroupBalanceInDateRange\n(initialDate, finalDate)
activate "group1:Group" #FFBBBB

"group1:Group" -> "ledger:Ledger": getBalanceInDateRange\n(initialDate, finalDate)
activate "ledger:Ledger" #FFBBBB

deactivate "ledger:Ledger"
deactivate "group1:Group"
deactivate "balanceController:MemberGetsBalanceInDateRangeController"

== Assert ==

":Test" -> ":Test" : assertEquals(expectedGroupBalance, groupBalance)

@enduml