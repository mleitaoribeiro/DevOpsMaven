@startuml

autonumber 3.3.2.1
-> "service:US006CreatePersonAccountService" : createPersonAccount(createPersonAccountDTO)
activate "service:US006CreatePersonAccountService"  #FFBBBB

"service:US006CreatePersonAccountService" -> "createPersonAccountDTO:CreatePersonAccountDTO" : personEmail = getPersonEmail()
activate "createPersonAccountDTO:CreatePersonAccountDTO"  #FFBBBB
deactivate "createPersonAccountDTO:CreatePersonAccountDTO"

"service:US006CreatePersonAccountService" -> "createPersonAccountDTO:CreatePersonAccountDTO" : accountDenomination= getAccountDenomination()
activate "createPersonAccountDTO:CreatePersonAccountDTO"  #FFBBBB
deactivate "createPersonAccountDTO:CreatePersonAccountDTO"

"service:US006CreatePersonAccountService" -> "createPersonAccountDTO:CreatePersonAccountDTO" : accountDescription = getAccountDescription()
activate "createPersonAccountDTO:CreatePersonAccountDTO"  #FFBBBB
deactivate "createPersonAccountDTO:CreatePersonAccountDTO"

"service:US006CreatePersonAccountService" -> "personRepo:PersonRepository" : personID = findPersonByEmail(personEmail)
activate "personRepo:PersonRepository" #FFBBBB
deactivate "personRepo:PersonRepository"

"service:US006CreatePersonAccountService" -> "accountRepo:AccountRepository" : createAccount(accountDenomination, accountDescription, personID)
activate "accountRepo:AccountRepository" #FFBBBB

autonumber 3.3.2.6.1
create "account:Account"
"accountRepo:AccountRepository"-->"account:Account":create(accountDenomination, \naccountDescription, personEmail)
"accountRepo:AccountRepository"->":AccountDomainDataAssembler":toData(account)
activate ":AccountDomainDataAssembler" #FFBBBB

autonumber 3.3.2.6.2.1
":AccountDomainDataAssembler"->"account:Account" : personEmail = getOwnerID().toString()
activate "account:Account" #FFBBBB
deactivate "account:Account"

":AccountDomainDataAssembler"->"account:Account" : denomination = denominationToString()
activate "account:Account" #FFBBBB
deactivate "account:Account"

":AccountDomainDataAssembler"->"account:Account" : description = descriptionToString()
activate "account:Account" #FFBBBB
deactivate "account:Account"

":AccountDomainDataAssembler"->"account:Account" : balance = getBalance().toString()
activate "account:Account" #FFBBBB
deactivate "account:Account"

create "accountJpa:AccountJpa"
":AccountDomainDataAssembler"-->"accountJpa:AccountJpa" : create(personEmail, denomination, \n description, balance)
":AccountDomainDataAssembler"-->"accountRepo:AccountRepository" : accountJpa
deactivate ":AccountDomainDataAssembler"

autonumber 3.3.2.6.3
"accountRepo:AccountRepository"->"accountRepo:AccountRepository": accountJpaSaved = save(accountJpa)
"accountRepo:AccountRepository"->":AccountDomainDataAssembler":toDomain(accountJpaSaved)
activate ":AccountDomainDataAssembler" #FFBBBB

autonumber 3.3.2.6.4.1
":AccountDomainDataAssembler"->"account:Account" : personEmail = getAccountIDJpa().getOwner();
activate "account:Account" #FFBBBB
deactivate "account:Account"

":AccountDomainDataAssembler"->"account:Account" : denomination = getAccountIDJpa().getDenomination()
activate "account:Account" #FFBBBB
deactivate "account:Account"

":AccountDomainDataAssembler"->"account:Account" : description = accountJpa.getDescription()
activate "account:Account" #FFBBBB
deactivate "account:Account"

":AccountDomainDataAssembler"->"account:Account" : balance = accountJpa.getAmount()
activate "account:Account" #FFBBBB
deactivate "account:Account"

create "newAccount:Account"
":AccountDomainDataAssembler"-->"newAccount:Account" : create(personEmail, denomination, \n description, balance)
":AccountDomainDataAssembler" -> "accountRepo:AccountRepository" : newAccount
deactivate ":AccountDomainDataAssembler"

"accountRepo:AccountRepository" --> "service:US006CreatePersonAccountService" : newAccount
deactivate "accountRepo:AccountRepository"

autonumber 3.3.2.7
"service:US006CreatePersonAccountService" -> ":AccountDTOAssembler": createAccountDTOFromDomainObject(newAccount)
activate  ":AccountDTOAssembler" #FFBBBB

autonumber 3.3.2.7.1
":AccountDTOAssembler" -> "newAccount:Account" : personEmail = \ngetOwnerID().toString()
activate "newAccount:Account" #FFBBBB
deactivate "newAccount:Account" #FFBBBB

":AccountDTOAssembler" -> "newAccount:Account" : denomination = \ngetID().getDenomination()
activate "newAccount:Account" #FFBBBB
deactivate "newAccount:Account" #FFBBBB

":AccountDTOAssembler" -> "newAccount:Account" : description = \ndescriptionToString()
activate "newAccount:Account" #FFBBBB
deactivate "newAccount:Account" #FFBBBB

create "accountDTO:AccountDTO"
":AccountDTOAssembler" --> "accountDTO:AccountDTO" : create(personEmail, \ndenomination, description)

":AccountDTOAssembler" --> "service:US006CreatePersonAccountService" : accountDTO
deactivate ":AccountDTOAssembler"

<-- "service:US006CreatePersonAccountService" : accountDTO
deactivate "service:US006CreatePersonAccountService"

@enduml